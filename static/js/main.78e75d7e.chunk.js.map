{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Section/Section.module.css","components/ContactList/ContactList.module.css","components/Container/Container.js","components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","Section","title","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","existingContactsName","props","includes","toLowerCase","alert","onSubmit","reset","this","form","htmlFor","formLabel","type","onChange","id","formInput","btn","Component","ContactListItem","contact","onDeleteContact","item","onClick","ContactList","contacts","deleteContact","list","map","key","Filter","input","App","filter","forSubmitHandler","data","changeFilter","getVisibleContacts","normalizeFilter","getExistingContactsName","contactId","prevState","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78e75d7e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1OtEc\",\"formLabel\":\"ContactForm_formLabel__mVirc\",\"formInput\":\"ContactForm_formInput__myrPN\",\"btn\":\"ContactForm_btn__1mZCm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactListItem_item__1tPGa\",\"btn\":\"ContactListItem_btn__2j3zS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__1JIZV\",\"input\":\"Filter_input__1WtUL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1XVAc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2w5Oc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3f6t9\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={styles.Container}>{children}</div>\n);\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <section>\n    <h2 className={styles.title}>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\nexport default Section;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    existingContactsName: PropTypes.func.isRequired,\n  };\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = shortid.generate();\n  numberInputId = shortid.generate();\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name } = this.state;\n    const { existingContactsName } = this.props;\n    const reviewExistingContactsNames = existingContactsName().includes(\n      name.toLowerCase(),\n    );\n\n    reviewExistingContactsNames\n      ? alert(`${name} is already in contacts`)\n      : this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit} className={styles.form}>\n        <label htmlFor={this.nameInputId} className={styles.formLabel}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n            id={this.nameInputId}\n            className={styles.formInput}\n          />\n        </label>\n        <br />\n        <label htmlFor={this.numberInputId} className={styles.formLabel}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={this.handleChange}\n            id={this.numberInputId}\n            className={styles.formInput}\n          />\n        </label>\n        <button type=\"submit\" className={styles.btn}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactListItem.module.css';\n\nconst ContactListItem = ({ contact, onDeleteContact }) => {\n  const { name, number } = contact;\n\n  return (\n    <li className={styles.item}>\n      <span>{name}:</span>\n      <span> {number}</span>\n      <button type=\"button\" onClick={onDeleteContact} className={styles.btn}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.exact({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactlistItem from '../ContactListItem';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  return (\n    <ul className={styles.list}>\n      {contacts.map(({ id, ...contact }) => {\n        return (\n          <ContactlistItem\n            key={id}\n            contact={contact}\n            onDeleteContact={() => deleteContact(id)}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <>\n    <h3 className={styles.title}>Find contacts by name</h3>\n    <input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n      className={styles.input}\n    />\n  </>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport Container from './components/Container';\nimport Section from './components/Section';\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\nimport contacts from './data/contacts.json';\n\nclass App extends Component {\n  state = {\n    contacts,\n    filter: '',\n  };\n\n  forSubmitHandler = data => {\n    this.setState({ contacts: [...this.state.contacts, data] });\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizeFilter),\n    );\n  };\n\n  getExistingContactsName = () => {\n    const { contacts } = this.state;\n    return contacts.map(contact => contact.name.toLowerCase());\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <Container>\n        <Section title=\"Phonebook\">\n          <ContactForm\n            onSubmit={this.forSubmitHandler}\n            existingContactsName={this.getExistingContactsName}\n          />\n        </Section>\n        <Section title=\"Contacts\">\n          <Filter value={filter} onChange={this.changeFilter} />\n          <ContactList\n            contacts={visibleContacts}\n            deleteContact={this.deleteContact}\n          />\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","// Модули\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// Компоненты\nimport App from './App';\n// Стили\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}